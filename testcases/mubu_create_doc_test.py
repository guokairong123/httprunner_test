# NOTE: Generated By HttpRunner v3.1.4
# FROM: har/mubu.har


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
from testcases.mubu_login_test import TestCaseMubuLogin as MubuLogin


class TestCaseMubuCreateDoc(HttpRunner):

    config = (
        Config("testcase description")
        .base_url("https://api2.${host}")
        .verify(False)
        .variables(**{
            "host": "mubu.com",
            "folderId": "5R874ilX9nP"
        })
    )

    teststeps = [
        Step(
            RunTestCase("login")
            .with_variables(**{
                "phone": "17876253458",
                "password": "q992926186",
            })
            .call(MubuLogin)
            .export("jwt_token")
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/star_relation/get")
            .get("/v3/api/list/star_relation/get")
            .with_headers(
                **{
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/get")
            .post("/v3/api/list/get")
            .with_headers(
                **{
                    "content-length": "58",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {"folderId": 0, "sort": "time", "keywords": "", "source": "home"}
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/get_all_documents_page")
            .post("/v3/api/list/get_all_documents_page")
            .with_headers(
                **{
                    "content-length": "12",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"start": ""})
            .teardown_hook("${get_folders_num($response)}", "folders_num")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
            .assert_greater_than("$folders_num", 0)
        ),
        Step(
            RunRequest("/v3/api/message/get_message_unread")
            .post("/v3/api/message/get_message_unread")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"page": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/get_user_params")
            .post("/v3/api/user/get_user_params")
            .with_headers(
                **{
                    "content-length": "0",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_data("")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/advertisement/get")
            .post("/v3/api/advertisement/get")
            .with_headers(
                **{
                    "content-length": "10",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"type": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        # Step(
        #     RunRequest("/v3/api/list/create_folder")
        #     .post("/v3/api/list/create_folder")
        #     .with_headers(
        #         **{
        #             "content-length": "39",
        #             "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
        #             "sec-ch-ua-mobile": "?0",
        #             "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
        #             "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
        #             "content-type": "application/json;charset=UTF-8",
        #             "accept": "application/json, text/plain, */*",
        #             "jwt-token": "$jwt_token",
        #             "x-request-id": "${(get_random_request_id)}",
        #             "version": "3.0.0.21267",
        #             "origin": "https://${host}",
        #             "sec-fetch-site": "same-site",
        #             "sec-fetch-mode": "cors",
        #             "sec-fetch-dest": "empty",
        #             "referer": "https://${host}/",
        #             "accept-encoding": "gzip, deflate, br",
        #             "accept-language": "zh-CN,zh;q=0.9",
        #         }
        #     )
        #     .with_json({"name": "hogwarts_demo1", "folderId": "0"})
        #     .extract()
        #     .with_jmespath("body.data.folder.id", "folderId")
        #     .validate()
        #     .assert_equal("status_code", 200)
        #     .assert_equal("body.code", 0)
        # ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "42",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/create_doc")
            .post("/v3/api/list/create_doc")
            .with_headers(
                **{
                    "content-length": "35",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "type": 0})
            .extract().with_jmespath("body.data.id", "docId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "30",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": 0, "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/document/edit/get")
            .post("/v3/api/document/edit/get")
            .with_headers(
                **{
                    "content-length": "36",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "password": ""})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/user/current_level")
            .post("/v3/api/user/current_level")
            .with_headers(
                **{
                    "content-length": "28",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"document_id": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/register")
            .get("/v3/api/colla/register")
            .with_headers(
                **{
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "x-request-id": "${(get_random_request_id)}",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/doc/list")
            .post("/v3/api/refer/doc/list")
            .with_headers(
                **{
                    "content-length": "28",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"targetDocId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/node/count")
            .post("/v3/api/refer/node/count")
            .with_headers(
                **{
                    "content-length": "28",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"targetDocId": "$docId"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/members")
            .options("/v3/api/colla/members")
            .with_params(**{"memberId": "8441273827244994", "documentId": "$docId"})
            .with_headers(
                **{
                    "accept": "*/*",
                    "access-control-request-method": "GET",
                    "access-control-request-headers": "data-unique-id,jwt-token,request-id,x-request-id",
                    "origin": "https://${host}",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
        ),
        Step(
            RunRequest("/v3/api/colla/members")
            .get("/v3/api/colla/members")
            .with_params(**{"memberId": "8441273827244994", "documentId": "$docId"})
            .with_headers(
                **{
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "members:8441273827244994:1616987023394",
                    "x-request-id": "${(get_random_request_id)}",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "402",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:3",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 3,
                    "requestId": "MESSAGE:11519203:8441273827244994:3",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 0,
                            "content": [
                                {"name": "nameChanged", "title": "c", "original": ""},
                                {"name": "nameChanged", "title": "ce", "original": "c"},
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "402",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:5",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 5,
                    "requestId": "MESSAGE:11519203:8441273827244994:5",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 1,
                            "content": [
                                {"name": "nameChanged", "title": "c", "original": "ce"},
                                {"name": "nameChanged", "title": "", "original": "c"},
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "356",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:7",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 7,
                    "requestId": "MESSAGE:11519203:8441273827244994:7",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 2,
                            "content": [
                                {"name": "nameChanged", "title": "${gen_random_string(10)}", "original": ""}
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/refer/search_refers")
            .post("/v3/api/refer/search_refers")
            .with_headers(
                **{
                    "content-length": "53",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"docId": "$docId", "keywords": "测试", "option": 1})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "455",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:9",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 9,
                    "requestId": "MESSAGE:11519203:8441273827244994:9",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 3,
                            "content": [
                                {
                                    "name": "create",
                                    "created": [
                                        {
                                            "index": 0,
                                            "parentId": None,
                                            "node": {
                                                "id": "3IjytDBinY",
                                                "text": "",
                                                "modified": 1616987027757,
                                                "children": [],
                                            },
                                            "path": ["nodes", 0],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "501",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:11",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 11,
                    "requestId": "MESSAGE:11519203:8441273827244994:11",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 4,
                            "content": [
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "3IjytDBinY",
                                                "text": "<span>11</span>",
                                                "modified": 1616987030666,
                                            },
                                            "original": {
                                                "id": "3IjytDBinY",
                                                "text": "",
                                                "modified": 1616987027757,
                                            },
                                            "path": ["nodes", 0],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "670",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:13",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 13,
                    "requestId": "MESSAGE:11519203:8441273827244994:13",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 5,
                            "content": [
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "3IjytDBinY",
                                                "text": "<span>111</span>",
                                                "modified": 1616987030799,
                                            },
                                            "original": {
                                                "id": "3IjytDBinY",
                                                "text": "<span>11</span>",
                                                "modified": 1616987030666,
                                            },
                                            "path": ["nodes", 0],
                                        }
                                    ],
                                },
                                {
                                    "name": "create",
                                    "created": [
                                        {
                                            "index": 1,
                                            "parentId": None,
                                            "node": {
                                                "id": "vNnYnG2D5b",
                                                "text": "",
                                                "modified": 1616987031118,
                                                "children": [],
                                            },
                                            "path": ["nodes", 1],
                                        }
                                    ],
                                },
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "503",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:16",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "BROADCAST",
                    "reqId": 16,
                    "requestId": "MESSAGE:11519203:8441273827244994:16",
                    "token": "$docId",
                    "data": {
                        "message": {
                            "type": "CHANGE",
                            "documentId": "$docId",
                            "version": 6,
                            "content": [
                                {
                                    "name": "update",
                                    "updated": [
                                        {
                                            "updated": {
                                                "id": "vNnYnG2D5b",
                                                "text": "<span>2222</span>",
                                                "modified": 1616987031880,
                                            },
                                            "original": {
                                                "id": "vNnYnG2D5b",
                                                "text": "",
                                                "modified": 1616987031118,
                                            },
                                            "path": ["nodes", 1],
                                        }
                                    ],
                                }
                            ],
                        }
                    },
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/list/item_count")
            .post("/v3/api/list/item_count")
            .with_headers(
                **{
                    "content-length": "42",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0.21267",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json({"folderId": "$folderId", "source": "home"})
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
        Step(
            RunRequest("/v3/api/colla/message")
            .post("/v3/api/colla/message")
            .with_headers(
                **{
                    "content-length": "225",
                    "sec-ch-ua": '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
                    "sec-ch-ua-mobile": "?0",
                    "member-id": "8441273827244994",
                    "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36",
                    "data-unique-id": "c8f45955-c3d6-4125-806e-86b88a48ea00",
                    "content-type": "application/json;charset=UTF-8",
                    "accept": "application/json, text/plain, */*",
                    "jwt-token": "$jwt_token",
                    "request-id": "MESSAGE:11519203:8441273827244994:18",
                    "x-request-id": "${(get_random_request_id)}",
                    "version": "3.0.0",
                    "origin": "https://${host}",
                    "sec-fetch-site": "same-site",
                    "sec-fetch-mode": "cors",
                    "sec-fetch-dest": "empty",
                    "referer": "https://${host}/",
                    "accept-encoding": "gzip, deflate, br",
                    "accept-language": "zh-CN,zh;q=0.9",
                }
            )
            .with_json(
                {
                    "engineType": "MUBU",
                    "messageType": "UNWATCH",
                    "reqId": 18,
                    "requestId": "MESSAGE:11519203:8441273827244994:18",
                    "token": "$docId",
                    "data": {},
                    "context": {
                        "os": "macOS",
                        "osVersion": "10.15.0",
                        "appVersion": "default",
                        "platform": "web",
                    },
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.code", 0)
        ),
    ]


if __name__ == "__main__":
    TestCaseMubuCreateDoc().test_start()
